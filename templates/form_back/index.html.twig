{% extends 'base2.html.twig' %}

{% block title %}FormPost Index{% endblock %}

{% block content %}
<div class="container mt-4">
    <h1 class="text-center mb-4">ðŸ“‹ FormPost Index</h1>

    <div class="d-flex justify-content-between mb-3">
        <a href="{{ path('app_form_back_new') }}" class="btn btn-primary">
            <i class="fas fa-plus"></i> CrÃ©er un nouveau post
        </a>
    </div>
    

    <div class="table-responsive">
        <table class="table table-bordered table-striped">
            <thead class="table-dark">
                <tr>
                    <th>#</th>
                    <th>Nom</th>
                    <th>Date</th>
                    <th>Description</th>
                    <th>Commentaires</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody>
                {% for form_post in form_posts %}
                    <tr>
                        <td>{{ loop.index }}</td>
                        <td>{{ form_post.nom }}</td>
                        <td>{{ form_post.date ? form_post.date|date('Y-m-d H:i:s') : 'N/A' }}</td>
                        <td>{{ form_post.description }}</td>
                        <td>
                            <button class="btn btn-sm btn-secondary comment-btn" data-id="{{ form_post.id }}">
                                <i class="fas fa-comment"></i> ({{ form_post.reponses|length }})
                            </button>
                        </td>
                        <td>
                            <a href="{{ path('app_form_back_edit', {'id': form_post.id}) }}" class="btn btn-warning btn-sm">
                                <i class="fas fa-edit"></i> Modifier
                            </a>
                            <button class="btn btn-sm btn-danger delete-btn" data-url="{{ path('app_form_back_delete', {'id': form_post.id}) }}" data-token="{{ csrf_token('delete' ~ form_post.id) }}">
                                <i class="fas fa-trash-alt"></i> Supprimer
                            </button>
                        </td>
                    </tr>
                    
                    <!-- Comment Section -->
                    <tr id="comments-{{ form_post.id }}" class="comments-section" style="display: none;">
                        <td colspan="6">
                            <h6>Commentaires ({{ form_post.reponses|length }})</h6>
                            <div class="comments-list" id="comments-list-{{ form_post.id }}">
                                {% for reponse in form_post.reponses %}
                                    <div class="comment bg-light p-2 rounded mb-2">{{ reponse.contenu }}</div>
                                {% endfor %}
                            </div>
                            <a href="{{ path('app_reponse_back_new') }}" class="btn btn-sm btn-primary">
                                Ajouter un commentaire
                            </a>
                        </td>
                    </tr>
                {% else %}
                    <tr>
                        <td colspan="6" class="text-center text-muted">Aucun enregistrement trouvÃ©.</td>
                    </tr>
                {% endfor %}
            </tbody>
        </table>
    </div>
</div>

<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script>
document.addEventListener("DOMContentLoaded", function () {
    document.querySelectorAll('.delete-btn').forEach(button => {
        button.addEventListener('click', function(e) {
            e.preventDefault();
            let url = this.getAttribute('data-url');
            let token = this.getAttribute('data-token');

            Swal.fire({
                title: "ÃŠtes-vous sÃ»r ?",
                text: "Cette action est irrÃ©versible !",
                icon: "warning",
                showCancelButton: true,
                confirmButtonColor: "#d33",
                cancelButtonColor: "#3085d6",
                confirmButtonText: "Oui, supprimer !"
            }).then((result) => {
                if (result.isConfirmed) {
                    fetch(url, {
                        method: "POST",
                        headers: {
                            "X-Requested-With": "XMLHttpRequest",
                            "Content-Type": "application/x-www-form-urlencoded"
                        },
                        body: new URLSearchParams({ _token: token })
                    })
                    .then(response => response.json())
                    .then(data => {
                        if (data.success) {
                            Swal.fire("SupprimÃ© !", "L'Ã©lÃ©ment a Ã©tÃ© supprimÃ©.", "success")
                                .then(() => location.reload());
                        } else {
                            Swal.fire("Erreur", "Impossible de supprimer.", "error");
                        }
                    })
                    .catch(() => Swal.fire("Erreur", "Une erreur est survenue.", "error"));
                }
            });
        });
    });

    document.addEventListener('click', function(event) {
        if (event.target.classList.contains('comment-btn')) {
            let postId = event.target.getAttribute('data-id');
            let commentRow = document.getElementById('comments-' + postId);
            commentRow.style.display = commentRow.style.display === 'none' ? 'table-row' : 'none';
        }
    });
});
</script>
{% endblock %}
